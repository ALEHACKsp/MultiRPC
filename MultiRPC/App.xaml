<Application x:Class="MultiRPC.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:MultiRPC"
             xmlns:system="clr-namespace:System;assembly=mscorlib">
<Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Assets/Themes/DesignerTheme.xaml" />
                <ResourceDictionary Source="Assets/Icons.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <DrawingImage x:Key="CrossIcon">
                <DrawingImage.Drawing>
                    <DrawingGroup ClipGeometry="M0,0 V360 H360 V0 H0 Z">
                        <DrawingGroup Opacity="1" Transform="1,0,0,1,-457,-224">
                            <GeometryDrawing Geometry="F0 M360,360z M0,0z M462,229L812,579">
                                <GeometryDrawing.Pen>
                                    <Pen Brush="{DynamicResource TextColourSCBrush}" Thickness="25" StartLineCap="Round" EndLineCap="Round" LineJoin="Round" />
                                </GeometryDrawing.Pen>
                            </GeometryDrawing>
                        </DrawingGroup>
                        <DrawingGroup Opacity="1" Transform="6.12323E-17,1,-1,6.12323E-17,584,-457">
                            <GeometryDrawing Geometry="F0 M360,360z M0,0z M462,229L812,579">
                                <GeometryDrawing.Pen>
                                    <Pen Brush="{DynamicResource TextColourSCBrush}" Thickness="25" StartLineCap="Round" EndLineCap="Round" LineJoin="Round" />
                                </GeometryDrawing.Pen>
                            </GeometryDrawing>
                        </DrawingGroup>
                    </DrawingGroup>
                </DrawingImage.Drawing>
            </DrawingImage>

            <Geometry x:Key="MultiRPCLogoGeometry">F1 M1000,1000z M0,0z M617.94,676C617.94,676 602.7,657.79 589.94,642.12 645.42,626.45 666.59,592.12 666.59,592.12A242.81,242.81,0,0,1,617.89,617.12A304.4,304.4,0,0,1,556.49,635.33A296.72,296.72,0,0,1,446.8,634.9A322.36,322.36,0,0,1,384.55,616.69A248.08,248.08,0,0,1,353.63,602.29C352.36,601.45 351.09,601.02 349.82,600.18 348.98,599.75 348.55,599.33 348.13,599.33 340.51,595.09 336.27,592.13 336.27,592.13 336.27,592.13 356.6,625.59 410.38,641.68 397.68,657.77 382.01,676.4 382.01,676.4 288.42,673.4 252.84,612.46 252.84,612.46 252.84,477.37 313.84,367.68 313.84,367.68 374.84,322.37 432.41,323.68 432.41,323.68L436.65,328.76C360.42,350.36 325.65,383.81 325.65,383.81 325.65,383.81 334.97,378.73 350.65,371.96 396,352 432,346.91 446.85,345.22A41.11,41.11,0,0,1,454.05,344.37A358.13,358.13,0,0,1,539.6,343.52A352.22,352.22,0,0,1,667.07,383.75C667.07,383.75,633.61,352,561.62,330.39L567.55,323.62C567.55,323.62 625.55,322.35 686.12,367.62 686.12,367.62 747.12,477.31 747.12,612.4 747.12,611.97 711.54,672.96 617.95,675.92z M577.59,479.89C553.45,479.89 534.4,500.64 534.4,526.47 534.4,552.3 553.88,573.05 577.59,573.05 601.73,573.05 620.79,552.3 620.79,526.47 620.79,500.64 601.31,479.89 577.59,479.89z M423.02,479.89C398.88,479.89 379.82,500.64 379.82,526.47 379.82,552.3 399.3,573.05 423.02,573.05 447.16,573.05 466.22,552.3 466.22,526.47 466.64,500.64 447.16,479.89 423,479.89z</Geometry>
            <DrawingGroup x:Key="MultiRPCLogoDrawingGroup" ClipGeometry="M0,0 V1000 H1000 V0 H0 Z">
                <GeometryDrawing>
                    <GeometryDrawing.Geometry>
                        <RectangleGeometry RadiusX="0" RadiusY="0" Rect="0,0,1000,1000" />
                    </GeometryDrawing.Geometry>
                    <GeometryDrawing.Brush>
                        <LinearGradientBrush StartPoint="1091.51,158.49" EndPoint="-91.51,841.51"
                                             MappingMode="Absolute" SpreadMethod="Pad" Opacity="1">
                            <GradientStop Color="#FF00FFED" Offset="0" />
                            <GradientStop Color="#FF0077E9" Offset="1" />
                        </LinearGradientBrush>
                    </GeometryDrawing.Brush>
                </GeometryDrawing>
                <GeometryDrawing Brush="#FFFFFFFF" Geometry="{StaticResource MultiRPCLogoGeometry}" />
            </DrawingGroup>
            <DrawingImage x:Key="MultiRPCLogoDrawingImage" Drawing="{StaticResource MultiRPCLogoDrawingGroup}" />

            <SolidColorBrush Color="#FFF13333" x:Key="Red" />
            <SolidColorBrush Color="#6A7EC4" x:Key="Purple" />
            <SolidColorBrush Color="#FFEEAD37" x:Key="Orange" />
            <SolidColorBrush Color="#FF43B581" x:Key="Green" />
            <system:Double x:Key="PagesMaxHeight">320</system:Double>

            <Style TargetType="TextBlock">
                <Setter Property="Foreground" Value="{DynamicResource TextColourSCBrush}"/>
            </Style>

            <Style TargetType="Frame">
                <Setter Property="NavigationUIVisibility" Value="Hidden"/>
            </Style>

            <Style TargetType="Border" x:Key="maskStyle">
                <Setter Property="Background" Value="{DynamicResource AccentColour2SCBrush}" />
                <Setter Property="CornerRadius" Value="15,15,0,0" />
            </Style>

            <Style TargetType="Button">
                <Setter Property="Background" Value="{DynamicResource AccentColour1SCBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource TextColourSCBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource AccentColour4SCBrush}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                <ContentPresenter Content="{TemplateBinding Content}"
                                                  x:Name="contentPresenter" Focusable="False" TextBlock.TextAlignment="Center"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  Margin="10,3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" TargetName="border"
                                            Value="{DynamicResource AccentColour2HoverSCBrush}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" TargetName="border"
                                            Value="{DynamicResource AccentColour1SCBrush}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Background" TargetName="border"
                                            Value="{DynamicResource DisabledButtonColour}" />
                                    <Setter Property="BorderThickness" TargetName="border" Value="0" />
                                    <Setter Property="Foreground" Value="{DynamicResource DisabledButtonTextColour}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="Button" x:Key="ButtonRed" BasedOn="{StaticResource {x:Type Button}}">
                <Setter Property="Background" Value="{DynamicResource Red}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Width="{TemplateBinding Width}">
                                <ContentPresenter TextBlock.Foreground="White" Content="{TemplateBinding Content}"
                                                  x:Name="contentPresenter" Focusable="False" TextBlock.TextAlignment="Center"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  Margin="10,3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" TargetName="border" Value="#FFE64747" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" TargetName="border" Value="#FFEE3333" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="Button" x:Key="ButtonPurple" BasedOn="{StaticResource {x:Type Button}}">
                <Setter Property="Background" Value="{DynamicResource Purple}" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                <TextBlock Foreground="White" Text="{TemplateBinding Content}"
                                           x:Name="contentPresenter" Focusable="False" TextWrapping="Wrap"  TextAlignment="Center"
                                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                           Margin="10,3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" TargetName="border" Value="#5D70B5" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" TargetName="border" Value="#5164A7" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Background" TargetName="border"
                                            Value="{DynamicResource DisabledButtonColour}" />
                                    <Setter Property="Foreground" Value="{DynamicResource DisabledButtonTextColour}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="Button" x:Key="ButtonGreen" BasedOn="{StaticResource {x:Type Button}}">
                <Setter Property="Background" Value="{DynamicResource Green}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                <TextBlock Foreground="White" Text="{TemplateBinding Content}"
                                           x:Name="contentPresenter" Focusable="False" TextWrapping="Wrap" TextAlignment="Center"
                                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                           Margin="10,3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" TargetName="border" Value="#FF3FA979" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" TargetName="border" Value="#FF3DA375" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Background" TargetName="border"
                                            Value="{DynamicResource DisabledButtonColour}" />
                                    <Setter Property="Foreground" Value="{DynamicResource DisabledButtonTextColour}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="TextBox">
                <Setter Property="Height" Value="23" />
                <Setter Property="Foreground" Value="{DynamicResource TextColourSCBrush}" />
                <Setter Property="Background" Value="{DynamicResource AccentColour1SCBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource AccentColour4SCBrush}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBoxBase}">
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                <ScrollViewer VerticalAlignment="Center" x:Name="PART_ContentHost" Focusable="False"
                                              HorizontalScrollBarVisibility="Hidden"
                                              VerticalScrollBarVisibility="Hidden" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="BorderBrush" TargetName="border" Value="Transparent" />
                                    <Setter Property="Foreground" Value="{DynamicResource DisabledButtonTextColour}" />
                                    <Setter Property="Background" TargetName="border"
                                            Value="{DynamicResource DisabledButtonColour}" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="BorderBrush" TargetName="border"
                                            Value="{DynamicResource AccentColour5SCBrush}" />
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter Property="BorderBrush" TargetName="border"
                                            Value="{DynamicResource AccentColour5SCBrush}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="Hyperlink">
                <Setter Property="Foreground" Value="{DynamicResource TextColourSCBrush}" />
            </Style>

            <Style TargetType="CheckBox">
                <Setter Property="Background" Value="{DynamicResource AccentColour1SCBrush}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Border x:Name="checkBoxBorder" BorderBrush="{DynamicResource AccentColour3SCBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <Grid x:Name="markGrid">
                                        <Path x:Name="optionMark"
                                              Data="F1M9.97498,1.22334L4.6983,9.09834 4.52164,9.09834 0,5.19331 1.27664,3.52165 4.255,6.08833 8.33331,1.52588E-05 9.97498,1.22334z"
                                              Fill="{DynamicResource TextColourSCBrush}" Margin="1" Opacity="0"
                                              Stretch="None" />
                                        <Rectangle x:Name="indeterminateMark"
                                                   Fill="{DynamicResource TextColourSCBrush}" Margin="2" Opacity="0" />
                                    </Grid>
                                </Border>
                                <ContentPresenter x:Name="contentPresenter"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  Content="{TemplateBinding Content}" Grid.Column="1"
                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                  Focusable="False"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="BorderBrush" TargetName="checkBoxBorder"
                                            Value="{DynamicResource AccentColour4SCBrush}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="BorderBrush" TargetName="checkBoxBorder"
                                            Value="{DynamicResource AccentColour5SCBrush}" />
                                    <Setter Property="Fill" TargetName="optionMark"
                                            Value="{DynamicResource AccentColour5SCBrush}" />
                                    <Setter Property="Fill" TargetName="indeterminateMark"
                                            Value="{DynamicResource AccentColour5SCBrush}" />
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Opacity" TargetName="optionMark" Value="1" />
                                    <Setter Property="Opacity" TargetName="indeterminateMark" Value="0" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="ComboBox">
                <Setter Property="Background" Value="{DynamicResource AccentColour1SCBrush}" />
                <Setter Property="Height" Value="23" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition
                                        MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                        Width="0" />
                                </Grid.ColumnDefinitions>
                                <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2"
                                       IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                       Margin="1"
                                       PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                                       Placement="Bottom">
                                    <Border MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                            MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                                            x:Name="DropDownBorder"
                                            BorderBrush="{DynamicResource AccentColour4SCBrush}" BorderThickness="1"
                                            Background="{DynamicResource AccentColour2SCBrush}">
                                        <ScrollViewer x:Name="DropDownScrollViewer">
                                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0"
                                                        VerticalAlignment="Top" Width="0">
                                                    <Rectangle x:Name="OpaqueRect"
                                                               Fill="{DynamicResource AccentColour2SCBrush}"
                                                               Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                                                               Width="{Binding ActualWidth, ElementName=DropDownBorder}" />
                                                </Canvas>
                                                <ItemsPresenter x:Name="ItemsPresenter"
                                                                KeyboardNavigation.DirectionalNavigation="Contained"
                                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                            </Grid>
                                        </ScrollViewer>
                                    </Border>
                                </Popup>
                                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}"
                                              BorderThickness="{TemplateBinding BorderThickness}"
                                              Background="{TemplateBinding Background}" Grid.ColumnSpan="2"
                                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                    <ToggleButton.Style>
                                        <Style TargetType="{x:Type ToggleButton}">
                                            <Setter Property="OverridesDefaultStyle" Value="True" />
                                            <Setter Property="IsTabStop" Value="False" />
                                            <Setter Property="Focusable" Value="False" />
                                            <Setter Property="ClickMode" Value="Press" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                        <Border x:Name="templateRoot"
                                                                Background="{DynamicResource AccentColour1SCBrush}"
                                                                BorderThickness="1"
                                                                BorderBrush="{DynamicResource AccentColour4SCBrush}"
                                                                SnapsToDevicePixels="True">
                                                            <Border x:Name="splitBorder" BorderBrush="Transparent"
                                                                    BorderThickness="1" HorizontalAlignment="Right"
                                                                    Margin="0" SnapsToDevicePixels="True"
                                                                    Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                                                <Path x:Name="Arrow"
                                                                      Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z"
                                                                      Fill="{DynamicResource AccentColour4SCBrush}"
                                                                      HorizontalAlignment="Center" Margin="0"
                                                                      VerticalAlignment="Center" />
                                                            </Border>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition
                                                                        Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                                                                        Value="true" />
                                                                    <Condition
                                                                        Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}"
                                                                        Value="false" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Background" TargetName="templateRoot"
                                                                        Value="{DynamicResource AccentColour1SCBrush}" />
                                                                <Setter Property="BorderBrush"
                                                                        TargetName="templateRoot"
                                                                        Value="{DynamicResource AccentColour5SCBrush}" />
                                                                <Setter Property="Fill" TargetName="Arrow"
                                                                        Value="{DynamicResource AccentColour5SCBrush}" />
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition
                                                                        Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                                                                        Value="true" />
                                                                    <Condition
                                                                        Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}"
                                                                        Value="true" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Background" TargetName="templateRoot"
                                                                        Value="{DynamicResource AccentColour1SCBrush}" />
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition
                                                                        Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}"
                                                                        Value="true" />
                                                                    <Condition
                                                                        Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}"
                                                                        Value="true" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Background" TargetName="templateRoot"
                                                                        Value="{DynamicResource AccentColour4SCBrush}" />
                                                            </MultiDataTrigger>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Fill" TargetName="Arrow"
                                                                        Value="Transparent" />
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                                <ContentPresenter x:Name="contentPresenter"
                                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                  Content="{TemplateBinding SelectionBoxItem}"
                                                  ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  IsHitTestVisible="False" Margin="{TemplateBinding Padding}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasItems" Value="False">
                                    <Setter Property="Height" TargetName="DropDownBorder" Value="95" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsGrouping" Value="True" />
                                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
                                                   Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                                </MultiTrigger>
                                <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                                    <Setter Property="Canvas.Top" TargetName="OpaqueRect"
                                            Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                                    <Setter Property="Canvas.Left" TargetName="OpaqueRect"
                                            Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <Style TargetType="ComboBox" x:Key="DictionaryComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
                <Setter Property="ItemTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <ComboBoxItem Content="{Binding Path=Key}" Tag="{Binding Path=Value}" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="ComboBoxItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                            <Border x:Name="Bd" BorderBrush="Transparent" BorderThickness="0"
                                    Background="Transparent"
                                    Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  Content="{TemplateBinding Content}"
                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="False" />
                                        <Condition Property="IsMouseOver" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Bd"
                                            Value="{DynamicResource AccentColour2HoverSCBrush}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="True" />
                                        <Condition Property="IsMouseOver" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Bd"
                                            Value="{DynamicResource AccentColour2HoverSCBrush}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="True" />
                                        <Condition Property="IsMouseOver" Value="False" />
                                        <Condition Property="IsKeyboardFocused" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Bd"
                                            Value="{DynamicResource AccentColour2HoverSCBrush}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="True" />
                                        <Condition Property="IsMouseOver" Value="False" />
                                        <Condition Property="IsKeyboardFocused" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Bd"
                                            Value="{DynamicResource AccentColour2HoverSCBrush}" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="ScrollViewer">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                            <Grid x:Name="Grid" Background="Transparent">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                        CanContentScroll="{TemplateBinding CanContentScroll}"
                                                        CanHorizontallyScroll="False" CanVerticallyScroll="False"
                                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                                        Content="{TemplateBinding Content}" Grid.Column="0"
                                                        Margin="{TemplateBinding Padding}" Grid.Row="0" />
                                <ScrollBar x:Name="PART_VerticalScrollBar"
                                           AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow"
                                           Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0"
                                           Grid.Row="0"
                                           Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                           Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                           ViewportSize="{TemplateBinding ViewportHeight}">
                                    <ScrollBar.Template>
                                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                                            <Grid x:Name="Bg" SnapsToDevicePixels="True" Background="Transparent">
                                                <!--<Grid.RowDefinitions>
                                                    <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                                    <RowDefinition Height="1E-05*"/>
                                                    <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                                </Grid.RowDefinitions>-->
                                                <Track x:Name="PART_Track" IsDirectionReversed="True"
                                                       IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
                                                    <Track.Thumb>
                                                        <Thumb>
                                                            <Thumb.Style>
                                                                <Style TargetType="{x:Type Thumb}">
                                                                    <Setter Property="OverridesDefaultStyle"
                                                                            Value="True" />
                                                                    <Setter Property="IsTabStop" Value="False" />
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate
                                                                                TargetType="{x:Type Thumb}">
                                                                                <Border CornerRadius="5"
                                                                                        x:Name="rectangle"
                                                                                        Background="{DynamicResource AccentColour1SCBrush}"
                                                                                        Height="{TemplateBinding Height}"
                                                                                        SnapsToDevicePixels="True"
                                                                                        Width="10" />
                                                                                <ControlTemplate.Triggers>
                                                                                    <Trigger Property="IsMouseOver"
                                                                                             Value="True">
                                                                                        <Setter Property="Background"
                                                                                                TargetName="rectangle"
                                                                                                Value="{DynamicResource AccentColour2HoverSCBrush}" />
                                                                                    </Trigger>
                                                                                    <Trigger Property="IsDragging"
                                                                                             Value="True">
                                                                                        <Setter Property="Background"
                                                                                                TargetName="rectangle"
                                                                                                Value="{DynamicResource AccentColour3SCBrush}" />
                                                                                    </Trigger>
                                                                                </ControlTemplate.Triggers>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </Thumb.Style>
                                                        </Thumb>
                                                    </Track.Thumb>
                                                </Track>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition
                                                            Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}"
                                                            Value="true" />
                                                        <Condition
                                                            Binding="{Binding IsPressed, ElementName=PART_LineDownButton}"
                                                            Value="true" />
                                                    </MultiDataTrigger.Conditions>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition
                                                            Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}"
                                                            Value="true" />
                                                        <Condition
                                                            Binding="{Binding IsPressed, ElementName=PART_LineUpButton}"
                                                            Value="true" />
                                                    </MultiDataTrigger.Conditions>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition
                                                            Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}"
                                                            Value="true" />
                                                        <Condition
                                                            Binding="{Binding IsPressed, ElementName=PART_LineDownButton}"
                                                            Value="false" />
                                                    </MultiDataTrigger.Conditions>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition
                                                            Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}"
                                                            Value="true" />
                                                        <Condition
                                                            Binding="{Binding IsPressed, ElementName=PART_LineUpButton}"
                                                            Value="false" />
                                                    </MultiDataTrigger.Conditions>
                                                </MultiDataTrigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </ScrollBar.Template>
                                </ScrollBar>
                                <ScrollBar x:Name="PART_HorizontalScrollBar"
                                           AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow"
                                           Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0"
                                           Orientation="Horizontal" Grid.Row="1"
                                           Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                           Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                           ViewportSize="{TemplateBinding ViewportWidth}">
                                    <ScrollBar.Template>
                                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                                            <Grid x:Name="Bg" SnapsToDevicePixels="True" Background="Transparent">
                                                <!--<Grid.ColumnDefinitions>
                                                        <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                                        <ColumnDefinition Width="1E-05*"/>
                                                        <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                                </Grid.ColumnDefinitions>-->
                                                <Track x:Name="PART_Track" Grid.Column="1"
                                                       IsEnabled="{TemplateBinding IsMouseOver}">
                                                    <Track.Thumb>
                                                        <Thumb>
                                                            <Thumb.Style>
                                                                <Style TargetType="{x:Type Thumb}">
                                                                    <Setter Property="OverridesDefaultStyle"
                                                                            Value="True" />
                                                                    <Setter Property="IsTabStop" Value="False" />
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate
                                                                                TargetType="{x:Type Thumb}">
                                                                                <Border CornerRadius="5"
                                                                                        x:Name="rectangle"
                                                                                        Background="{DynamicResource AccentColour1SCBrush}"
                                                                                        Height="10"
                                                                                        SnapsToDevicePixels="True"
                                                                                        Width="{TemplateBinding Width}" />
                                                                                <ControlTemplate.Triggers>
                                                                                    <Trigger Property="IsMouseOver"
                                                                                             Value="True">
                                                                                        <Setter Property="Background"
                                                                                                TargetName="rectangle"
                                                                                                Value="{DynamicResource AccentColour2HoverSCBrush}" />
                                                                                    </Trigger>
                                                                                    <Trigger Property="IsDragging"
                                                                                             Value="True">
                                                                                        <Setter Property="Background"
                                                                                                TargetName="rectangle"
                                                                                                Value="{DynamicResource AccentColour3SCBrush}" />
                                                                                    </Trigger>
                                                                                </ControlTemplate.Triggers>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </Thumb.Style>
                                                        </Thumb>
                                                    </Track.Thumb>
                                                </Track>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition
                                                            Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}"
                                                            Value="true" />
                                                        <Condition
                                                            Binding="{Binding IsPressed, ElementName=PART_LineRightButton}"
                                                            Value="true" />
                                                    </MultiDataTrigger.Conditions>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition
                                                            Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}"
                                                            Value="true" />
                                                        <Condition
                                                            Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}"
                                                            Value="true" />
                                                    </MultiDataTrigger.Conditions>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition
                                                            Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}"
                                                            Value="true" />
                                                        <Condition
                                                            Binding="{Binding IsPressed, ElementName=PART_LineRightButton}"
                                                            Value="false" />
                                                    </MultiDataTrigger.Conditions>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition
                                                            Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}"
                                                            Value="true" />
                                                        <Condition
                                                            Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}"
                                                            Value="false" />
                                                    </MultiDataTrigger.Conditions>
                                                </MultiDataTrigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </ScrollBar.Template>
                                </ScrollBar>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
